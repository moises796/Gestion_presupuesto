
@{
    ViewBag.Title = "Presupuesto";
}

@Html.DevExpress().GetStyleSheets(
    new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
    new StyleSheet { ExtensionSuite = ExtensionSuite.Editors },
    new StyleSheet { ExtensionSuite = ExtensionSuite.GridView }
)
@Html.DevExpress().GetScripts(
    new Script { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
    new Script { ExtensionSuite = ExtensionSuite.Editors },
    new Script { ExtensionSuite = ExtensionSuite.GridView }
)

@Html.DevExpress().FloatingActionButton(settings =>
{

    settings.Name = "fab";
    settings.ContainerElementID = "contentt";
    settings.InitialActionContext = "NewRowContext";
    settings.HorizontalMargin = 35;
    settings.VerticalMargin = 40;
    settings.ClientSideEvents.ActionItemClick = "function(s,e){OnActionItemClick(s,e);}";
    settings.ClientSideEvents.ActionCollapsing = "function(s,e){OnActionCollapsing(s,e);}";

    settings.VerticalPosition = FloatingActionButtonVerticalPosition.Top;
    settings.HorizontalPosition = FloatingActionButtonHorizontalPosition.Right;
    settings.Items.Add(new FABAction("NewRowContext", "Agregar", "Nueva solicitud"));
    settings.Items.Add(new FABAction("CancelContext", "Cancelar", "Cancelar"));

    FABActionGroup focusedRowContext = new FABActionGroup() { ContextName = "ClickTabla" };
    focusedRowContext.Text = "Acciones";
    settings.Items.Add(focusedRowContext);

    focusedRowContext.Items.Add(new FABActionItem("Editar", Url.Content("~/Content/gridImg/edit2.svg"), "Editar"));
    focusedRowContext.Items.Add(new FABActionItem("Notificar", Url.Content("~/Content/gridImg/send.svg"), "Iniciar proceso"));
    focusedRowContext.Items.Add(new FABActionItem("Vobos", Url.Content("~/Content/gridImg/vobo.svg"), "Detalle V°. b°.(s)"));

    focusedRowContext.Items.Add(new FABActionItem("Imprimir", Url.Content("~/Content/gridImg/doc.svg"), "Comprobante finalización"));


    focusedRowContext.Items.Add(new FABActionItem("Descarta", Url.Content("~/Content/gridImg/deny.svg"), "Descartar"));


}).GetHtml()

@Html.DevExpress().PopupControl(settings =>
{
    settings.Name = "modalvobo";
    settings.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.OnWindowInnerWidth;
    settings.Width = 1024;
    settings.Height = 600;
    settings.CloseAction = CloseAction.CloseButton;
    settings.CloseOnEscape = true;
    settings.PopupAnimationType = DevExpress.Web.AnimationType.Fade;
    settings.ShowHeader = true;
    settings.HeaderText = "Estado de vistos buenos";
    settings.Modal = true;
    settings.AllowDragging = false;
    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.PopupVerticalAlign = PopupVerticalAlign.TopSides;
    settings.SetContent(() =>
    {

        @Html.RenderAction("GridListadoVobo", "Vobo");

    });
}).GetHtml()

<center>
    <h1 class="animated fadeInUp encabezado mt-2">Gestión de presupuesto</h1>
</center>

<div class="card border-0 rounded-4 shadow-sm p-1 p-sm-2 p-md-3 p-lg-5 ">
    <div class="d-flex justify-content-between align-items-start mb-3">
        @Html.Action("GridDetallePresupuesto", "Presupuesto")
    </div>
</div>

<script>
    function normalizeMonthYear(s, e) {
        var d = s.GetDate();
        if (!d) return;
        // Normaliza a 1 del mes para que no haya día “suelto”
        s.SetDate(new Date(d.getFullYear(), d.getMonth(), 1));
    }



    //FLOATING

    function OnActionItemClick(s, e) {
        //alert(e.actionName);
        if (e.actionName === "Agregar") {
            GridDetallePresupuesto.AddNewRow()
        } else if (e.actionName === "Editar") {
            var index = GridDetallePresupuesto.GetFocusedRowIndex();
            GridDetallePresupuesto.StartEditRow(index);
        } else if (e.actionName === "Notificar") {
            var index = GridDetallePresupuesto.GetFocusedRowIndex();
            var data = GridDetallePresupuesto.GetRowKey(index);
            $.ajax({
                type: "POST",
                url: "@Url.Content("~/Presupuesto/IniciarProceso")",
                data: "id_detalle_presupuesto=" + data
            }).done(function (resp) {
                if (resp.data == 1) {
                    botonesCommand('btnImprimir', datos[18], datos[1]);
                } else {
                    swal("¡Importante!", "Únicamente el empleado que elaboró o remite la correspondencia están autorizados", "info");
                }
            });
        }
        else if (e.actionName === "Vobos") {
            var index = GridDetallePresupuesto.GetFocusedRowIndex();
            var data = GridDetallePresupuesto.GetRowKey(index);

            //ABRIR MODAL
            localStorage.setItem("id_detalle_presupuesto", data);
            modalvobo.Show();
            GridListadoVobo.PerformCallback();
        }
    }

    function OnInit(s, e) {
        //s.SetFocusedRowIndex(-1);
    }
    function OnRowClick(s, e) {
        if (s.IsNewRowEditing() || s.IsEditing()) {
            e.cancel = true;
        }
        else {
            var index = e.visibleIndex;
            var data = s.GetRowKey(index);
            var datos = data.split('|');
            fab.SetActionContext("ClickTabla", true);
        }

    }
    function OnActionCollapsing(s, e) {
        //alert(e.contextName);

        if (e.contextName === "ClickTabla") {
            s.ExpandActionGroupItems();
        }
        var isRowActionContext = e.contextName === "ClickTabla" || e.contextName === "FocusedRowContext";
        var isCollapsedByButton = e.collapseReason === ASPxClientFloatingActionButtonCollapseReason.CollapseButton;
        if (isRowActionContext && isCollapsedByButton) {
            setTimeout(function () {
                GridDetallePresupuesto.CancelEdit();
                //GridViewAmumas.SetFocusedRowIndex(-1);
                fab.SetActionContext("NewRowContext");
            }, 100);
        }


        if (e.contextName === "ClickTablaNI") {
            s.ExpandActionGroupItems();
        }
        var isRowActionContext = e.contextName === "ClickTablaNI" || e.contextName === "FocusedRowContext";
        var isCollapsedByButton = e.collapseReason === ASPxClientFloatingActionButtonCollapseReason.CollapseButton;
        if (isRowActionContext && isCollapsedByButton) {
            setTimeout(function () {
                GridDetallePresupuesto.CancelEdit();
                //GridViewAmumas.SetFocusedRowIndex(-1);
                fab.SetActionContext("NewRowContext");
            }, 100);
        }
    }
</script>